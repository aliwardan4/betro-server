name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - name: Clean up Postgres
      run: npm run db:clean
      env:
        POSTGRES_URI: postgres://postgres:postgres@localhost:5432/postgres
    - name: Run migrate Postgres
      run: npm run db:migrate
      env:
        POSTGRES_URI: postgres://postgres:postgres@localhost:5432/postgres
    - name: Nodejs Testing
      run: npm run test
      env:
        POSTGRES_URI: postgres://postgres:postgres@localhost:5432/postgres
        REDIS_URI: redis://redis:6379
